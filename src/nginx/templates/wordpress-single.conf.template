# https://wordpress.org/support/article/nginx/
# https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
# https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=modern&openssl=1.1.1k&guideline=5.6

#server {
#    listen 80;
#    server_name laravel.com.co;
#    return 301 https://laravel.com.co$request_uri;
#}

# Redirect everything to the main site. We use a separate server statement and NOT an if statement - see http://wiki.nginx.org/IfIsEvil
server {
    server_name  _;
    return 302 $scheme://${WEBSITE_DOMAIN}$request_uri;
}

server {
	listen 80;
	listen [::]:80;

	# For https
	listen 443 ssl;
	listen [::]:443 ssl ipv6only=on;
	ssl_certificate /etc/nginx/ssl/default.crt;
	ssl_certificate_key /etc/nginx/ssl/default.key;

	server_name ${WEBSITE_DOMAIN};
	root ${APP_CODE_PATH_CONTAINER};
	index index.php index.html index.htm;

	include global/restrictions.conf;

	location / {
		# This is cool because no php is touched for static content.
		# include the "?$args" part so non-default permalinks doesn't break when using query string
		try_files $uri $uri/ /index.php?$args;
		# try_files $uri $uri/ /index.php?$is_args$args;
	}

	location ~ \.php$ {
		try_files $uri /index.php =404;
		fastcgi_pass php-upstream;
		fastcgi_index index.php;
		fastcgi_buffers 16 16k;
		fastcgi_buffer_size 32k;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		#fixes timeouts
		fastcgi_read_timeout 600;
		include fastcgi_params;
		#
		#NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
		fastcgi_intercept_errors on;
	}

	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
		expires max;
		log_not_found off;
	}

	location ~* \.(webp)$ {
		expires max;
		log_not_found off;
	}

	location /.well-known/acme-challenge/ {
		root /var/www/letsencrypt/;
		log_not_found off;
	}

	error_log /var/log/nginx/wordpress_error.log;
	access_log /var/log/nginx/wordpress_access.log;
}
